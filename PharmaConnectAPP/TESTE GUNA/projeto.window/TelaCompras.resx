<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xkoecQAAAABJRU5ErkJggg==
</value>
  </data>
</root>